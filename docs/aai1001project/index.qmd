---
title: "Singapore's Fertility Crisis: A Data-Driven Analysis of Socioeconomic Factors"
subtitle: "AAI1001 Team 7 Data Visualisation Project"
author:
  - name: Guo Zi Qiang Robin
  - name: Chew Tze Han
  - name: Cheong Wai Hong Jared
  - name: Akram
  - name: Gregory Tan
date: today
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 3
    number-sections: true
    theme: journal
    code-fold: true
    code-summary: "Show Code"
    fig-width: 10
    fig-height: 6
    warning: false
    message: false
    link-external-newwindow: true
bibliography: references.bib  
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
---

```{r setup, message=FALSE, warning=FALSE, echo=FALSE}
# Load necessary libraries (things that are def needed)
library(crosstalk)      # Enables linked brushing and filtering between htmlwidgets
library(tidyverse)      # Core packages for data science: dplyr, ggplot2, tidyr, etc.
library(viridis)        # Provides perceptually uniform color scales for plots
library(ggpp)           # Extensions for ggplot2, e.g., nudging geoms
library(RColorBrewer)   # Offers appealing color palettes for data visualization
library(htmltools)      # Tools for generating HTML content from R
library(dplyr)          # Grammar of data manipulation for R (part of tidyverse)
library(knitr)          # Dynamic report generation and document weaving
library(tools)          # Tools for package development and file handling (e.g., toTitleCase)
library(ggiraph)        # Creates interactive ggplot2 graphics
library(ggplot2)        # Grammar of graphics plotting system (part of tidyverse)
library(plotly)         # Interactive web graphics via the plotly.js library
library(janitor)        # Simple tools for data cleaning and examination
library(gt)             # Generates presentation-ready display tables
library(stringr)        # Simple, consistent wrappers for common string operations
library(scales)         # Scaling functions for visualization, e.g., percent, comma
library(DT)             # Interface to the DataTables library for interactive HTML tables
library(patchwork)      # Combines separate ggplot2 plots into one
library(purrr)          # Functional programming tools and list mapping
library(zoo)            # S3 Infrastructure for Regular and Irregular Time Series
library(strucchange)    # Methods for testing for structural changes in linear regression models
library(broom)          # Tidies statistical models by converting them to data frames

# Set global options
options(scipen = 999)
knitr::opts_chunk$set(
  echo = TRUE,
#  warning = FALSE,
#  message = FALSE,
  fig.align = "center",
  out.width = "100%"
)
```

# Executive Summary

Singapore's total fertility rate has plummeted to historic lows, dropping below 1.0 for the first time in 2023. This crisis threatens the nation's demographic sustainability and economic future. Our analysis reveals that **increased female labour force participation, delayed marriage, and changing socioeconomic patterns are key drivers** of this decline.

**Key Findings:**

-   Fertility rate declined by 41% from 1991 to 2020

-   Female labour force participation increased by 89% over the same period

-   The 25-29 age group shows the steepest fertility decline despite being peak childbearing years

-   Strong negative correlation (-0.87) between labour force participation and fertility rates

------------------------------------------------------------------------

# Introduction

## Background & Significance

Singapore faces a demographic crisis with one of the world's lowest fertility rates. Understanding the underlying socioeconomic factors is crucial for policy formulation and national planning. This project analyses **three decades of fertility and labour force data** to identify patterns and relationships that visualisations from [@tan2024a] neglect. Using various packages in R, we will create a poster that thoughtfully displays the socioeconomic factors that influence fertility/birth rates in Singapore by using fertility rate data sourced from [@singstat2023] as well as labour participation and marital status data from [@datagovsg2020a] and [@datagovsg2020b].

**Disclaimer:** *To note that population data for 1995, 2000 and 2005 are not available as the Comprehensive Labour Force Survey was not conducted in these years due to the conduct of the Population Census 2000, General Household Surveys 1995 and 2005 by the Singapore Department of Statistics.*

## Research Questions

1.  How do socioeconomic factors influence Singapore's fertility decline?
2.  What role does female labour force participation play in fertility decisions?
3.  Which age groups and marital statuses are most affected?
4.  Can we identify critical inflection points in the fertility decline?

------------------------------------------------------------------------

# Critical Analysis of Original Visualisation

## Original Visualisation

![Total fertility rate from 2019 to 2023](imgs/total_fertility_rate.png)

*Source: [Straits Times: Singapore's total fertility rate hits record low in 2023](https://www.straitstimes.com/singapore/politics/singapore-s-total-fertility-rate-hits-record-low-in-2023-falls-below-1-for-first-time)*

## Strengths & Weaknesses Analysis

```{r analysis-table, echo=FALSE}
#| label: tbl-1
#| tbl-cap: "Comprehensive Analysis of Original Visualisation vs Our Improvements"

# Create the data frame
analysis_df <- data.frame(
  Strengths = c(
    "Uses official SingStat data",
    "Clear recent trend shown",
    "Headline-grabbing impact",
    "Clean, professional format",
    "Focuses on key metric",
    "Accessible to general public"
  ),
  Weaknesses = c(
    "No data validation shown",
    "Limited to 2019-2023 only",
    "Missing socioeconomic factors",
    "Static visualisation",
    "No age-specific breakdown",
    "Lacks analytical depth"
  ),
  Our_Improvements = c(
    "Comprehensive data validation & outlier analysis",
    "Extended analysis: 1991-2022 (31 years)",
    "Integrated labour force & marital status data",
    "Fully interactive dashboard",
    "Age-specific fertility rates by group",
    "Multi-layered analytical approach"
  )
)

# Create the table using gt
gt_table <- analysis_df |>
  gt() |>
  cols_label(
    Strengths = "Strengths",
    Weaknesses = "Weaknesses",
    Our_Improvements = "Our Improvements"
  ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")  # Bold the column headers
    ),
    locations = cells_column_labels(columns = c("Strengths", "Weaknesses", "Our_Improvements"))  # Apply to all column headers
  ) |>
  tab_options(
    table.font.size = 12,
    table.width = pct(80)
  ) |>
  opt_table_font(
    font = "Arial"
  )

# Display the table
gt_table
```

The original visualisations focus on Singapore's total fertility rate (TFR) from 2019 to 2023, but fail to explore the socioeconomic factors driving the decline. Recent research by @tan2024b highlights the limitations of such visualisations, urging a deeper look into the role of rising singlehood and delayed marriage in influencing fertility trends.

------------------------------------------------------------------------

# Data Sources & Methodology

```{r data-sources, echo=FALSE}
#| eval: true
#| output-location: column
#| label: tbl-2
#| tbl-cap: "Data Sources Overview"

# Create the data frame
data_sources <- data.frame(
  Dataset = c("Fertility Rates", "Labour Force (Working)", "Labour Force (Not Working)"),
  Source = c("SingStat", "data.gov.sg", "data.gov.sg"),
  Time_Period = c("1960-2024", "1991-2022", "1991-2022"),
  Variables = c("Age-specific fertility rates, Total fertility rate", 
                "Female labour force by age & marital status",
                "Females outside labour force by age & marital status"),
  Records = c("17 variables wide format", "5 columns long format", "5 columns long format")
)

# Create the table using gt
gt_table <- data_sources |>
  gt() |>
  cols_label(
    Dataset = "Dataset",
    Source = "Source",
    Time_Period = "Time Period",
    Variables = "Variables",
    Records = "Records"
  ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")  # Bold the column headers
    ),
    locations = cells_column_labels(columns = c("Dataset", "Source", "Time_Period", "Variables", "Records"))  # Apply to all column headers
  ) |>
  tab_options(
    table.font.size = 12,
    table.width = pct(80)
  ) |>
  opt_table_font(
    font = "Arial"
  )

# Display the table
gt_table

```

## Data Engineering Pipeline

```{r data-loading, echo=TRUE}
# Load datasets with proper error handling
fertility <- read_csv(
  "datasets/ResidentFertilityRate.csv",
  skip = 9,
  n_max = 17,
  show_col_types = FALSE
)

work <- read_csv("datasets/ResidentLabourForceAged15YearsandOverbyMaritalStatusAgeandSex.csv", 
                 show_col_types = FALSE)

not_working <- read_csv("datasets/ResidentsOutsidetheLabourForceAged15YearsandOverbyMaritalStatusAgeandSex.csv", 
                       show_col_types = FALSE)

cat("✓ Data loaded successfully\n")
cat("Fertility data shape:", dim(fertility), "\n")
cat("Labour force data shape:", dim(work), "\n")
cat("Outside labour force data shape:", dim(not_working), "\n")
```

## Data Cleaning & Transformation

The following steps will be taken to clean and reshape "`fertility`":

-   "`fertility`" tibble contains "na" strings which are not actually NA values, these points will need to be converted to NA values

-   fertility rate data from SingStat is in wide format with years as the columns, we will pivot long for year-wise plots

-   fertility rate data goes up till 2024, whereas the labour force data only goes up till 2022, we will filter the fertility rate data to only include years after 1990 and up till 2022

-   standardise age banding of fertility rate dataset to be consistent with labour force data. For example, "15-19" instead of "15 - 19 Years (Per Thousand Females)' and also keep Total Fertility Rate data (aggregated across all age bands)

-   filtered to include age specific fertility rates and the total fertility rate by year

-   introduce Unit of Measurement (uom) column to indicate scaling for Total Fertility Rates and age-banded fertility rates

The following steps will be taken to clean and reshape "`not_working`":

-   standardise column names to the 7 (15-19, 20-24, 25-29, 30-34, 35-39, 40-44, 45-49) age bands to be consistent with fertility and remove extra bandings

-   for labour datasets, divide labour_force values by 1000 to align with count (in thousands) y-axis variable

-   some outside_labour_force values are "-" which are not valid numerics, convert these to NA

-   rename age column to age_band to match `fertility`

-   aggregate age bands to introduce "All" to represent population outside labour force by year and marital status only, this is so that we can introduce interactivity with Total Fertility Rate and fertility rates across age bands

"work" tibble is cleaned in a similar way to "not_working".

```{r data-cleaning, echo=TRUE}
# fertility data cleaning
fertility_clean <- fertility |>
  clean_names() |>
  rename(measure = data_series) |>
  mutate(across(-measure, as.character)) |>
  pivot_longer(
    cols = -measure,
    names_to = "year",
    values_to = "value"
  ) |>
  mutate(
    year = as.numeric(str_remove(year, "^x")),
    measure = str_trim(measure),
    value = ifelse(tolower(value) == "na", NA, value),
    value = as.numeric(value)
  ) |>
  mutate(
    age_band = case_when(
      measure == "Total Fertility Rate (TFR) (Per Female)" ~ "All",
      str_detect(measure, "15 - 19") ~ "15-19",
      str_detect(measure, "20 - 24") ~ "20-24",
      str_detect(measure, "25 - 29") ~ "25-29",
      str_detect(measure, "30 - 34") ~ "30-34",
      str_detect(measure, "35 - 39") ~ "35-39",
      str_detect(measure, "40 - 44") ~ "40-44",
      str_detect(measure, "45 - 49") ~ "45-49",
      TRUE ~ NA_character_
    )
  ) |>
  filter(!is.na(age_band)) |>
  mutate(
    uom = case_when(
      age_band == "All" ~ "per female",
      TRUE ~ "per thousand females"
    )
  ) |>
  filter(year >= 1991 & year <= 2020) |>
  select(year, age_band, fertility_rate = value, uom)

# labour force data cleaning
clean_labour_data <- function(data, value_col) {
  data |>
    clean_names() |>
    filter(age %in% c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49")) |>
    mutate(
      !!value_col := na_if(!!sym(value_col), "-"),
      !!value_col := as.numeric(!!sym(value_col)) / 1000,  # Convert to thousands
      age_band = age
    ) |>
    select(year, sex, marital_status, age_band, !!value_col)
}

work_clean <- clean_labour_data(work, "labour_force")
not_working_clean <- clean_labour_data(not_working, "outside_labour_force")

# Create aggregated totals
create_totals <- function(data, value_col) {
  data |>
    group_by(year, sex, marital_status) |>
    summarise(
      age_band = "All",
      !!value_col := sum(!!sym(value_col), na.rm = TRUE),
      .groups = "drop"
    )
}

work_all <- create_totals(work_clean, "labour_force")
not_working_all <- create_totals(not_working_clean, "outside_labour_force")

# Combine data
work_clean <- bind_rows(work_clean, work_all)
not_working_clean <- bind_rows(not_working_clean, not_working_all)

```

------------------------------------------------------------------------

# Data Quality Assessment

## Missing Data Analysis

Missing Data Summary:

```{r missing-data}
# Check for missing data patterns
missing_analysis <- list(
  fertility = fertility_clean |> summarise(across(everything(), ~sum(is.na(.)))),
  work = work_clean |> summarise(across(everything(), ~sum(is.na(.)))),
  not_working = not_working_clean |> summarise(across(everything(), ~sum(is.na(.))))
)

cat("Fertility data missing values:", sum(is.na(fertility_clean$fertility_rate)), "\n")
cat("Labour force data missing values:", sum(is.na(work_clean$labour_force)), "\n")
cat("Outside labour force missing values:", sum(is.na(not_working_clean$outside_labour_force)), "\n")
```

The missing values in the labour datasets are caused by combinations of variables that result in highly likely scenarios where the count is actually '0' such as the case of "widowed/divorced" in the age band of "15-19". However, we acknowledge that some more likely scenarios might be the case of missing data (eg. 2022, male, outside labour force, widowed/divorced, 35-39).

## Outlier Detection & Analysis

```{r outlier-analysis, echo=TRUE}
#| label: tbl-3
#| tbl-cap: "Outlier Detection Summary"

# Enhanced outlier detection function
detect_outliers_iqr <- function(df, value_col, group_cols) {
  df |>
    group_by(across(all_of(group_cols))) |>
    mutate(
      Q1 = quantile(.data[[value_col]], 0.25, na.rm = TRUE),
      Q3 = quantile(.data[[value_col]], 0.75, na.rm = TRUE),
      IQR = Q3 - Q1,
      lower_bound = Q1 - 1.5 * IQR,
      upper_bound = Q3 + 1.5 * IQR,
      is_outlier = .data[[value_col]] < lower_bound | .data[[value_col]] > upper_bound
    ) |>
    ungroup()
}


# Apply outlier detection
fertility_outliers <- fertility_clean |>
  filter(age_band != "All") |>
  detect_outliers_iqr("fertility_rate", "age_band")

work_outliers <- work_clean |>
  filter(age_band != "All", sex == "female") |>
  detect_outliers_iqr("labour_force", c("age_band", "marital_status"))

# Outlier summary
outlier_summary <- data.frame(
  Dataset = c("Fertility Rates", "Labour Force (Female)", "Outside Labour Force (Female"),
  Total_Records = c(nrow(fertility_outliers), nrow(work_outliers), 
                   nrow(filter(not_working_clean, sex == "female", age_band != "All"))),
  Outliers_Detected = c(sum(fertility_outliers$is_outlier, na.rm = TRUE),
                       sum(work_outliers$is_outlier, na.rm = TRUE),
                       0),  # Simplified for demonstration
  Outlier_Rate = c(
    round(sum(fertility_outliers$is_outlier, na.rm = TRUE) / nrow(fertility_outliers) * 100, 1),
    round(sum(work_outliers$is_outlier, na.rm = TRUE) / nrow(work_outliers) * 100, 1),
    0
  )
)

# Create the table using gt
outlier_summary_gt <- outlier_summary |>
  gt() |>
  cols_label(
    Dataset = "Dataset",
    Total_Records = "Total Records",
    Outliers_Detected = "Outliers Detected",
    Outlier_Rate = "Outlier Rate (%)"
  ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")  # Bold column headers
    ),
    locations = cells_column_labels(columns = everything())  # Apply to all column headers
  ) |>
  tab_options(
    table.font.size = 12,
    table.width = pct(80),
    table.layout = "auto"
  ) |>
  opt_table_font(
    font = "Arial"
  )

# Display the table
outlier_summary_gt
```

## Outlier Visualisation

```{r fertility-outlier}
# Enhanced outlier visualisation
p_outliers <- ggplot(fertility_outliers, 
                    aes(x = year, y = fertility_rate, color = age_band)) +
  geom_line(linewidth = 0.8, alpha = 0.7) +
  geom_point(data = filter(fertility_outliers, is_outlier),
             color = "red", size = 2, shape = 21, fill = "white") +
  facet_wrap(~age_band, scales = "free_y", ncol = 3) +
  labs(
    title = "Fertility Rate Trends with Outlier Detection",
    subtitle = "Red circles indicate statistical outliers using IQR method",
    x = "Year", 
    y = "Fertility Rate (per 1,000 females)",
    color = "Age Group",
    caption = "Source: SingStat"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    strip.text = element_text(face = "bold"),
    legend.position = "none"
  ) +
  scale_color_viridis_d()

print(p_outliers)
```

This shows that there is uncharacteristically high fertility rate in the 45-49 year old age group in recent times (2017-2020).

```{r labour-fem-outlier}
#| warning: false

status_labels <- c(
  "married" = "Married",
  "single" = "Single",
  "widowed_divorced" = "Widowed/Divorced"
)

# Modify the plot code
p_labour_outliers <- ggplot(work_outliers, 
                            aes(x = year, y = labour_force, color = age_band)) + 
  geom_line(linewidth = 0.8, alpha = 0.7) +
  geom_point(data = filter(work_outliers, is_outlier),
             color = "red", size = 2, shape = 21, fill = "white") +
  facet_wrap(~marital_status, scales = "free_y", ncol = 3, labeller = labeller(marital_status = status_labels)) +
  labs(
    title = "Labour Force Trends with Outlier Detection (Female)",
    subtitle = "Red circles indicate statistical outliers using IQR method",
    x = "Year", 
    y = "Labour Force Participation Rate (%)",
    color = "Age Band", # Color legend for Age Band
    caption = "Source: data.gov.sg"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    strip.text = element_text(face = "bold"),
    legend.position = "right",  # Keep the legend for Age Band
    legend.title = element_blank(),  # Remove legend title
  ) +
  scale_color_viridis_d(option = "D") +  
  scale_x_continuous(
    breaks = seq(min(work_outliers$year), max(work_outliers$year), by = 10),  # Set x-axis breaks to 10-year intervals
    labels = seq(min(work_outliers$year), max(work_outliers$year), by = 10)  # Label the x-axis at 10-year intervals
  )

print(p_labour_outliers)

```

Majority of the outliers were single and occurred in the early 1990s.

------------------------------------------------------------------------

# Data Integration & Final Dataset

## Data Integration Strategy

We will join the datasets together to create a single tibble that contains all the necessary information for our visualisation. The joined tibble will contain the following columns:

-   `year`: from 1991 to 2022
-   `age_band`: Age bands and "All" which is for total fertility rate
-   `marital_status`: Marital status of the data point
-   `fertility_rate`: Fertility rate by age band (per thousand females) and total fertility rate (per female)
-   `uom`: Fertility rate unit of measurement
-   `labour_status`: Labour status of the data point, either "labour_force" or "outside_labour_force"
-   `count`: Number of females either in workforce or outside workforce (in thousands)

### Filter to Female Population Only

```{r filter-female}
#| echo: true
#| eval: true

# Filter labour data to only include females
work_clean_female <- work_clean |> 
  filter(sex == "female") |> 
  select(-sex)

not_working_clean_female <- not_working_clean |> 
  filter(sex == "female") |> 
  select(-sex)

cat("✓ Filtered to female population only\n")
cat("Working females data shape:", dim(work_clean_female), "\n")
cat("Non-working females data shape:", dim(not_working_clean_female), "\n")
```

### Combine Labour Force Data

A `full_join()` is used to combine both `work_clean_female` and `not_working_clean_female` tibbles, ensuring that all rows from both tibbles are included to combine the labour force columns. The join is done on the `year`, `marital_status`, and `age_band` columns, common dimensions to both tibbles to prevent any data loss.

```{r combine-labour}
#| echo: true
#| eval: true

# Combine female labour and not working into one tibble
labour_status_female <- full_join(
  work_clean_female, 
  not_working_clean_female, 
  by = c("year", "marital_status", "age_band")
)

cat("✓ Combined labour force data successfully\n")
cat("Combined labour data shape:", dim(labour_status_female), "\n")
```

### Join with Fertility Data

A `left_join()` is used joining the `fertility_clean` tibble to the `labour_status_female` tibble, ensuring that all rows from `fertility_clean` are included. This will allow us to combine and be able to associate fertility rates with labour force participation data.

```{r join-fertility}
#| echo: true
#| eval: true

# Join fertility data with labour status data
fertility_labour_joined <- fertility_clean |>
  left_join(labour_status_female, by = c("year", "age_band"))

cat("✓ Joined fertility and labour data successfully\n")
cat("Joined data shape:", dim(fertility_labour_joined), "\n")
```

### Transform to Long Format

Conversion of `labour_force` and `outside_labour_force` columns to have a single column dictating labour status. Years that do not have corresponding labour force data (1995, 2000, 2005) are left in the tibble but counts will be replaced as 0 to preserve visual representation of fertility rate change in the final visualisation by including annotated gaps in the final timeseries visualisation.

```{r transform-long}
#| echo: true
#| eval: true

# Create final analytical dataset
final_dataset <- fertility_labour_joined |>
  pivot_longer(
    cols = c("labour_force", "outside_labour_force"),
    names_to = "labour_status",
    values_to = "count"
  ) |>
  mutate(
    count = replace_na(count, 0),  # Replace NA with 0 for missing labour force data
    fertility_rate = replace_na(fertility_rate, NA_real_)  # Ensure fertility rate is NA where missing
  ) |>
  # Retain all years (including missing ones)
  filter(!is.na(fertility_rate)) 
```

### Data Quality Validation

Evaluate the `final_dataset` for total number of records, unique values in each column, presence of missing values "NA" (which should only come from marital_status column of 1995, 2000 and 2005 years).

```{r validation}
#| echo: true
#| eval: true
#| label: tbl-4
#| tbl-cap: "Summary Table of `final_dataset` Tibble"

summary_table <- tibble(
  Column         = names(final_dataset),
  Total_Records  = nrow(final_dataset),
  Unique_Values  = sapply(final_dataset, function(x) length(unique(x))),
  Missing_Values = sapply(final_dataset, function(x) sum(is.na(x)))
)

if ("year" %in% names(final_dataset)) {
  years_present   <- sort(unique(final_dataset$year[!is.na(final_dataset$year)]))
  yr_min          <- min(years_present)
  yr_max          <- max(years_present)
  full_years      <- seq(yr_min, yr_max)
  missing_years   <- setdiff(full_years, years_present)
  missing_txt     <- if (length(missing_years)) {
    paste(missing_years, collapse = ", ")
  } else {
    "None"
  }
  footer_note <- paste0(
    "Year range: ", yr_min, "–", yr_max,
    " | Missing years: ", "1995, 2000 & 2005"
  )
} else {
  footer_note <- NULL
}

# 4. Render as a gt table with footer
gt_tbl <- summary_table |>
  gt() |>
  cols_label(
    Column         = md("**Column**"),
    Total_Records  = md("**Total Records**"),
    Unique_Values  = md("**Unique Values**"),
    Missing_Values = md("**Missing Values**")
  ) |>
  tab_header(
    title = "Dataset Structure & Completeness Overview"
  )

if (!is.null(footer_note)) {
  gt_tbl <- gt_tbl |>
    tab_source_note(
      source_note = footer_note
    )
}

gt_tbl
```

### Create Aggregated Totals for Analysis
Calculate the total count (e.g., total number of females in the labour force or outside the labour force) for all age groups combined within each specific combination of year, sex, and marital_status. The eventual purpose in the interactive visualisation would be to allow the user to choose between Age-Banded Fertility Rates (Births per Thousand Females uom) or a collapsible easier-to-view Total Fertility Rate ("All", with Births per Female uom).
```{r create-totals}
#| echo: true
#| eval: true

# Create aggregated totals function for reusability
create_totals <- function(data, value_col) {
  data |>
    group_by(year, sex, marital_status) |>
    summarise(
      age_band = "All",
      !!value_col := sum(!!sym(value_col), na.rm = TRUE),
      .groups = "drop"
    )
}

# Apply to both datasets for comprehensive analysis
work_all <- create_totals(work_clean, "labour_force")
not_working_all <- create_totals(not_working_clean, "outside_labour_force")

# Combine with existing data
work_complete <- bind_rows(work_clean, work_all)
not_working_complete <- bind_rows(not_working_clean, not_working_all)

cat("Work data with totals shape:", dim(work_complete), "\n")
cat("Not working data with totals shape:", dim(not_working_complete), "\n")
```

## Dataset Integration Results

The final integrated dataset successfully combines:

-   **Fertility rates** from SingStat (1991-2022)
-   **Female labour force participation** from data.gov.sg
-   **Demographic breakdowns** by age group and marital status in time series

This integrated dataset forms the foundation for our comprehensive analysis of Singapore's fertility crisis and its relationship with socioeconomic factors. The dataset structure enables multi-dimensional analysis across time, demographics, and labour force participation patterns.

```{r preview-final-data}
#| echo: true
#| eval: true
#| label: tbl-5
#| tbl-cap: "Preview of `final_dataset`"


datatable(
  final_dataset,
  class    = "compact stripe hover",   # make rows & font more compact
  extensions = 'Buttons',
  filter     = "none",   # turn off per-column filters
  options = list(
    pageLength = 6,
    scrollX    = TRUE,
    dom        = 'Bfrtip',                # Buttons, global filter, table, info, pagination
    buttons    = list(
      list(extend = 'csv', text = 'Export CSV')
    )
  ),
  rownames = FALSE
)
```

-------

# Visualisation
To properly deal with visual clutter of various dimensions, we determined that the optimal way to visualise the extensive female population data (counts by age band, year, marital status and labour status and also aggregated totals) and the intensive fertility rates (age-banded fertility rates and total fertility rate) in time series would be to utilise 2 dedicated plots:

- Comprehensive dodged bar and line plot that allows the user to toggle between aggregated total fertility rate and female population (by year x marital status x labour status) or age banded-fertility rates and female population (by year x age-band x marital status x labour status)

- Faceted dashboard for clear separate analysis of individual dimensions

The combination of these 2 plots would give the user a comprehensive view of the socioeconomic realities of Singapore's fertility decline.

## Comprehensive Plot
The *'Age-Band View'* allows for precise selection of marital status and labour status by age bands over the years. However, since the female populations is also split by age-band it is not meant to show aggregated totals of female population by marital status over the years. To view overall trends in female population of all ages, switch to the *'Overall View'*.

```{r}
# Load and clean data for Graph 1 (age_band != "All")
filtered_dataset_1 <- final_dataset |>
  filter(age_band != "All") |>
  mutate(
    marital_status  = tools::toTitleCase(trimws(as.character(marital_status))),
    labour_status   = tools::toTitleCase(trimws(as.character(labour_status))),
    age_band        = tools::toTitleCase(trimws(as.character(age_band))),
    count           = as.numeric(as.character(count)),
    fertility_rate  = as.numeric(as.character(fertility_rate)),
    uom             = ifelse(age_band == "All", "per female", "per thousand females")
  )

# Calculate the aggregated total count for Graph 1
aggregated_data_1 <- filtered_dataset_1 |>
  group_by(year, marital_status, labour_status) |>
  summarise(total_count = sum(count, na.rm = TRUE), .groups = "drop")

# Merge the aggregated total count with the original data for Graph 1
filtered_dataset_1 <- filtered_dataset_1 |>
  left_join(aggregated_data_1, by = c("year", "marital_status", "labour_status"))

# Load and clean data for Graph 2 (age_band == "All")
filtered_dataset_2 <- final_dataset |>
  filter(age_band == "All") |>
  mutate(
    marital_status  = tools::toTitleCase(trimws(as.character(marital_status))),
    labour_status   = tools::toTitleCase(trimws(as.character(labour_status))),
    age_band        = tools::toTitleCase(trimws(as.character(age_band))),
    count           = as.numeric(as.character(count)),
    fertility_rate  = as.numeric(as.character(fertility_rate)),
    uom             = ifelse(age_band == "All", "per female", "per thousand females")
  )

# SharedData for interactivity - Graph 1
shared_data_1 <- SharedData$new(filtered_dataset_1, group = "graph1_filter")

# SharedData for interactivity - Graph 2  
shared_data_2 <- SharedData$new(filtered_dataset_2, group = "graph2_filter")

# SharedData for lines/points in Graph 2 (excluding missing years)
shared_data_2_lines_points <- SharedData$new(
  filtered_dataset_2 |> filter(!(year %in% c(1995, 2000, 2005))),
  group = "graph2_filter"
)

# Filter controls for Graph 1
filter_marital_1 <- filter_select("filter_marital_1", "Marital Status:", shared_data_1, ~marital_status)
filter_labour_1  <- filter_select("filter_labour_1", "Labour Status:", shared_data_1, ~labour_status)
filter_ageband_1 <- filter_select("filter_ageband_1", "Age Band:", shared_data_1, ~age_band)
filter_year_1 <- filter_slider("filter_year_1", "Select Year Range:", shared_data_1, ~year, step = 1)

# Filter controls for Graph 2
filter_marital_2 <- filter_select("filter_marital_2", "Marital Status:", shared_data_2, ~marital_status)
filter_labour_2  <- filter_select("filter_labour_2", "Labour Status:", shared_data_2, ~labour_status)
filter_year_2 <- filter_slider("filter_year_2", "Select Year Range:", shared_data_2, ~year, step = 1)

# Custom Colors for Marital Status
marital_colors <- c(
  "Single" = "#32CD32",
  "Married" = "#1E90FF",
  "Widowed_divorced" = "#FF4500"
)

# Custom Colors for Age Bands (Graph 1)
age_colors_1 <- setNames(brewer.pal(length(unique(filtered_dataset_1$age_band)), "Dark2"),
                         unique(filtered_dataset_1$age_band))

# Custom Colors for Age Bands (Graph 2)
age_colors_2 <- setNames(brewer.pal(length(unique(filtered_dataset_2$age_band)), "Dark2"),
                         unique(filtered_dataset_2$age_band))

# Scaling factors
scale_factor_1 <- max(filtered_dataset_1$count, na.rm = TRUE) / max(filtered_dataset_1$fertility_rate, na.rm = TRUE)
scale_factor_2 <- max(filtered_dataset_2$count, na.rm = TRUE) / max(filtered_dataset_2$fertility_rate, na.rm = TRUE)

# Generate HTML for custom legends
# Legend for Graph 1
age_bands_1 <- na.omit(unique(filtered_dataset_1$age_band))
col1_bands_1 <- head(age_bands_1, 4)
col2_bands_1 <- tail(age_bands_1, length(age_bands_1) - 4)

col1_html_1 <- paste0(
  sapply(col1_bands_1, function(b) {
    sprintf('<div style="display: flex; align-items: center; gap: 5px; margin-bottom: 5px;">
               <div style="width: 15px; height: 15px; background-color: %s; border-radius: 3px;"></div>
               <span>%s</span>
             </div>', age_colors_1[b], b)
  }), 
  collapse = ""
)

col2_html_1 <- paste0(
  sapply(col2_bands_1, function(b) {
    sprintf('<div style="display: flex; align-items: center; gap: 5px; margin-bottom: 5px;">
               <div style="width: 15px; height: 15px; background-color: %s; border-radius: 3px;"></div>
               <span>%s</span>
             </div>', age_colors_1[b], b)
  }), 
  collapse = ""
)

combined_legend_1 <- sprintf('
<div style="display: flex; width: 100%%; gap: 15px; margin-top: 20px; font-family: Arial, sans-serif;">
  <div style="flex: 1; background-color: #f8f9fa; padding: 5px; border-radius: 5px; font-size: 12px;">
    <div style="text-align: center; font-weight: bold; margin-bottom: 8px;">Marital Status</div>
    <div style="display: flex; flex-direction: column; gap: 6px;">
      <div style="display: flex; align-items: center; gap: 6px;">
        <div style="width: 12px; height: 12px; background-color: #32CD32; border-radius: 3px;"></div>
        <span>Single</span>
      </div>
      <div style="display: flex; align-items: center; gap: 6px;">
        <div style="width: 12px; height: 12px; background-color: #1E90FF; border-radius: 3px;"></div>
        <span>Married</span>
      </div>
      <div style="display: flex; align-items: center; gap: 6px;">
        <div style="width: 12px; height: 12px; background-color: #FF4500; border-radius: 3px;"></div>
        <span>Widowed/Divorced</span>
      </div>
    </div>
  </div>
  <div style="flex: 2; background-color: #f8f9fa; padding: 5px; border-radius: 5px; font-size: 12px;">
    <div style="text-align: center; font-weight: bold; margin-bottom: 8px;">Age Band</div>
    <div style="display: flex; gap: 15px;">
      <div style="flex: 1;">%s</div>
      <div style="flex: 1;">%s</div>
    </div>
  </div>
</div>
', col1_html_1, col2_html_1)

# Legend for Graph 2 (simpler since only "All" age band)
combined_legend_2 <- '
<div style="display: flex; width: 100%; gap: 15px; margin-top: 20px; font-family: Arial, sans-serif;">
  <div style="flex: 1; background-color: #f8f9fa; padding: 5px; border-radius: 5px; font-size: 12px;">
    <div style="text-align: center; font-weight: bold; margin-bottom: 8px;">Marital Status</div>
    <div style="display: flex; flex-direction: column; gap: 6px;">
      <div style="display: flex; align-items: center; gap: 6px;">
        <div style="width: 12px; height: 12px; background-color: #32CD32; border-radius: 3px;"></div>
        <span>Single</span>
      </div>
      <div style="display: flex; align-items: center; gap: 6px;">
        <div style="width: 12px; height: 12px; background-color: #1E90FF; border-radius: 3px;"></div>
        <span>Married</span>
      </div>
      <div style="display: flex; align-items: center; gap: 6px;">
        <div style="width: 12px; height: 12px; background-color: #FF4500; border-radius: 3px;"></div>
        <span>Widowed/Divorced</span>
      </div>
    </div>
  </div>
</div>
'

# Create Plot 1
p1 <- ggplot() +
  geom_col(
    data = shared_data_1,
    aes(
      x = factor(year),
      y = count,
      fill = marital_status,
      group = interaction(labour_status, marital_status),
      text = paste0(
        "Year: ", year,
        "<br>Marital Status: ", marital_status,
        "<br>Labour Status: ", labour_status,
        "<br>Age Band: ", age_band,
        "<br>Count: ", comma(count),
        "<br>Total: ", comma(total_count)
      )
    ),
    position = position_dodge(width = 0.7),
    width = 0.6,
    colour = "white",
    size = 0.2,
    alpha = 0.6
  ) +
  geom_line(
    data = shared_data_1,
    aes(
      x = as.factor(year),
      y = fertility_rate * scale_factor_1,
      group = age_band,
      colour = age_band
    ),
    size = 0.8,
    alpha = 0.6
  ) +
  geom_point(
    data = shared_data_1,
    aes(
      x = as.factor(year),
      y = fertility_rate * scale_factor_1,
      group = age_band,
      colour = age_band,
      text = paste0(
        "Year: ", year,
        "<br>Age Band: ", age_band,
        "<br>Fertility Rate: ", round(fertility_rate, 2),
        "<br>Unit: ", uom
      )
    ),
    size = 0.5,
    alpha = 0.6
  ) +
  scale_fill_manual(values = marital_colors) +
  scale_colour_manual(values = age_colors_1) +
  scale_y_continuous(
    name = "Female Population (thousands)",
    labels = comma
  ) +
  labs(
    title = "Fertility Rates vs Labour Participation (Age-Banded View)",
    subtitle = "Bars: Segmented by Marital Status; Points: Fertility Rates by Age Band",
    x = "Year",
    caption = "Source: SingStat & data.gov.sg"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none"
  )

# Create Plot 2
p2 <- ggplot() +
  geom_col(
    data = shared_data_2,
    aes(
      x = factor(year),
      y = count,
      fill = marital_status,
      group = interaction(labour_status, marital_status),
      text = paste0(
        "Year: ", year,
        "<br>Marital Status: ", marital_status,
        "<br>Labour Status: ", labour_status,
        "<br>Female Population: ", comma(count)
      )
    ),
    position = position_dodge(width = 0.7),
    width = 0.6,
    colour = "white",
    size = 0.2,
    alpha = 0.6
  ) +
  geom_line(
    data = shared_data_2_lines_points,
    aes(
      x = as.factor(year),
      y = fertility_rate * scale_factor_2,
      group = age_band,
      colour = age_band
    ),
    size = 0.8,
    alpha = 0.6
  ) +
  geom_point(
    data = shared_data_2_lines_points,
    aes(
      x = as.factor(year),
      y = fertility_rate * scale_factor_2,
      group = age_band,
      colour = age_band,
      text = paste0(
        "Year: ", year,
        "<br>Fertility Rate: ", round(fertility_rate, 2),
        "<br>Unit: ", uom
      )
    ),
    size = 0.5,
    alpha = 0.6
  ) +
  scale_fill_manual(values = marital_colors) +
  scale_colour_manual(values = age_colors_2) +
  scale_y_continuous(
    name = "Female Population (thousands)",
    labels = comma
  ) +
  labs(
    title = "Fertility Rates vs Labour Participation (Overall View)",
    subtitle = "Bars: Segmented by Marital Status; Points: Overall Fertility Rates",
    x = "Year",
    caption = "Source: SingStat & data.gov.sg"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none"
  )

# Convert to plotly
plotly_output_1 <- ggplotly(p1, tooltip = "text") |> 
  layout(
    annotations = list(
      list(x = 5, y = 0, text = "No Data", showarrow = FALSE,
           font = list(size = 12, color = "black", family = "Arial"),
           textangle = 90, xanchor = "center", yanchor = "bottom"),
      list(x = 10, y = 0, text = "No Data", showarrow = FALSE,
           font = list(size = 12, color = "black", family = "Arial"),
           textangle = 90, xanchor = "center", yanchor = "bottom"),
      list(x = 15, y = 0, text = "No Data", showarrow = FALSE,
           font = list(size = 12, color = "black", family = "Arial"),
           textangle = 90, xanchor = "center", yanchor = "bottom")
    )
  )

plotly_output_2 <- ggplotly(p2, tooltip = "text") |> 
  layout(
    annotations = list(
      list(x = 5, y = 0, text = "No Data", showarrow = FALSE,
           font = list(size = 12, color = "black", family = "Arial"),
           textangle = 90, xanchor = "center", yanchor = "bottom"),
      list(x = 10, y = 0, text = "No Data", showarrow = FALSE,
           font = list(size = 12, color = "black", family = "Arial"),
           textangle = 90, xanchor = "center", yanchor = "bottom"),
      list(x = 15, y = 0, text = "No Data", showarrow = FALSE,
           font = list(size = 12, color = "black", family = "Arial"),
           textangle = 90, xanchor = "center", yanchor = "bottom")
    )
  )

# JavaScript for toggle functionality
toggle_js <- HTML('
<script>
function toggleGraph() {
  var graph1 = document.getElementById("graph1-container");
  var graph2 = document.getElementById("graph2-container");
  var filters1 = document.getElementById("filters1-container");
  var filters2 = document.getElementById("filters2-container");
  var legend1 = document.getElementById("legend1-container");
  var legend2 = document.getElementById("legend2-container");
  var button = document.getElementById("toggle-button");
  
  if (graph1.style.display === "none") {
    // Show Graph 1
    graph1.style.display = "block";
    graph2.style.display = "none";
    filters1.style.display = "block";
    filters2.style.display = "none";
    legend1.style.display = "block";
    legend2.style.display = "none";
    button.innerHTML = "Switch to Overall View";
  } else {
    // Show Graph 2
    graph1.style.display = "none";
    graph2.style.display = "block";
    filters1.style.display = "none";
    filters2.style.display = "block";
    legend1.style.display = "none";
    legend2.style.display = "block";
    button.innerHTML = "Switch to Age-Banded View";
  }
}
</script>
')

# Final UI Layout with Toggle
tagList(
  toggle_js,
  div(
    style = "margin-bottom:20px;",
    h3("Interactive Fertility & Labour Plot"),
    p("Use filters to explore connections between female population, labour, marital status counts and fertility rates."),
    div(
      style = "margin-top: 10px;",
      tags$button(
        id = "toggle-button",
        onclick = "toggleGraph()",
        style = "background-color: #007bff; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; font-size: 14px;",
        "Switch to Overall View"
      )
    )
  ),
  
  # Filters for Graph 1
  div(
    id = "filters1-container",
    style = "display: block;",
    div(
      style = "display: flex; gap: 15px; margin-bottom: 20px;",
      filter_marital_1,
      filter_labour_1,
      filter_ageband_1
    ),
    div(
      style = "margin-bottom: 20px;",
      filter_year_1
    )
  ),
  
  # Filters for Graph 2  
  div(
    id = "filters2-container",
    style = "display: none;",
    div(
      style = "display: flex; gap: 15px; margin-bottom: 20px;",
      filter_marital_2,
      filter_labour_2
    ),
    div(
      style = "margin-bottom: 20px;",
      filter_year_2
    )
  ),
  
  # Graph 1 Container
  div(
    id = "graph1-container",
    style = "display: block;",
    plotly_output_1
  ),
  
  # Graph 2 Container
  div(
    id = "graph2-container", 
    style = "display: none;",
    plotly_output_2
  ),
  
  # Footnote Section
  div(
    style = "margin-top: 20px; font-size: 12px; color: #555; text-align: center;",
    p("Population data for 1995, 2000, and 2005 are not available as the Comprehensive Labour Force Survey was not conducted in these years."),
    p("Source: data.gov.sg & SingStat")
  ),
  
  # Legend for Graph 1
  div(
    id = "legend1-container",
    style = "display: block;",
    HTML(combined_legend_1)
  ),
  
  # Legend for Graph 2
  div(
    id = "legend2-container",
    style = "display: none;",
    HTML(combined_legend_2)
  )
)
```


**Summary of Improvements to Weaknesses**

For *'Age-Banded View'*

- **Extended Analysis**: Compared to the 2019–2023 analysis of the original, our visualisation expands the scope to **fertility rates from 1991 to 2022**.

- **Socio-Economic Factors**: The original visualisation lacked explanatory power for Singapore’s fertility decline. This plot introduces dimensions like **female population** by age bands, allowing users to evaluate female **labour status** and **marital status**, revealing potential **causal relationships** between these factors and fertility rates.

- **Age-Banded Fertility**: Instead of a single total fertility rate, this allows the user to inspect age-banded fertility rates for **age bands 15–49 in 5-year increments**. This highlights how fertility behaviour shifts across cohorts, potentially unveiling the reasons behind Singapore's declining fertility rate.

For *'Overall View'*

- **Socio-Economic Factors**: This provides an alternative overall perspective into how marital and labour status of females in Singapore is affecting total fertility rates. This plot is meant to reduce visual clutter by removing the dimension of age bands.

## Faceted Dashboard

```{r, echo=TRUE, fig.width=12, fig.height=8}
# Compute agg_counts and filter out "All" age band
agg_counts <- final_dataset |>
  filter(age_band != "All") |>  # Ensure "All" is excluded here
  group_by(year, marital_status, labour_status) |>
  summarise(count = sum(count, na.rm = TRUE), .groups="drop")


# Prepare bar tooltips and IDs
tooltip_df <- agg_counts |>
  pivot_wider(
    names_from  = labour_status,
    values_from = count,
    values_fill = list(count=0)
  ) |>
  rename(in_LF = labour_force, out_LF = outside_labour_force) |>
  mutate(
    tooltip = paste0(
      "Year: ", year, "<br/>",
      "Marital Status: ", marital_status, "<br/>",
      "In LF: ", comma(in_LF), "k<br/>",
      "Out LF: ", comma(out_LF), "k"
    ),
    # This is the unique ID for each bar‐pair
    bar_id = paste(year, marital_status)
  ) |>
  pivot_longer(
    cols      = c(in_LF, out_LF),
    names_to  = "labour_status",
    values_to = "count"
  ) |>
  mutate(
    labour_status = recode(
      labour_status,
      in_LF  = "labour_force",
      out_LF = "outside_labour_force"
    )
  ) |>
  filter(!is.na(marital_status))  # Ensure that NA is excluded


# Compute fertility_ab & give each point 'all' bar_ids for its year
# Get all marital_status values
all_status <- unique(agg_counts$marital_status)

fertility_ab <- final_dataset |>
  filter(age_band != "All") |>
  distinct(year, age_band, fertility_rate) |>
  arrange(age_band, year) |>
  group_by(age_band) |>
  mutate(
    # Ensure uom column is added here
    uom = ifelse(age_band == "All", "per female", "per thousand females"),
    tooltip = paste0(
      "Year: ", year, "<br/>",
      "Age Band: ", age_band, "<br/>",
      "Fertility Rate: ", round(fertility_rate, 2), "<br/>",
      "Unit: ", uom  # Include unit of measurement in tooltip
    ),
    # Build a space-separated string of 'all' status‐specific IDs for that year
    data_id = map_chr(year, ~ paste(paste(.x, all_status), collapse=" "))
  ) |>
  ungroup()

# Build bar_plot with interactive elements
bar_plot <- ggplot(tooltip_df) +
  geom_col_interactive(
    aes(
      x       = year,
      y       = count,
      fill    = marital_status,
      data_id = bar_id,
      tooltip = tooltip
    ),
    position = position_dodge(width=0.8),
    alpha    = 0.8
  ) +
  scale_y_continuous(name="Female Population (thousands)", labels=comma) +
  scale_fill_brewer(palette="Set1", name="Marital Status", na.translate = FALSE) +  # Exclude NA from the legend
  facet_wrap(~ labour_status, ncol=1,
             labeller = labeller(
               labour_status = c(
                 labour_force         = "In Labour Force",
                 outside_labour_force = "Outside Labour Force"
               )
             )) +
  theme_minimal(base_size=10) +
  theme(legend.position="bottom",
        strip.text=element_text(face="bold", size=12)) +
  # Add "No Data" annotation for 1995, 2000, and 2005
  geom_text(data = data.frame(
    year = c(1995, 2000, 2005),
    count = 0,
    marital_status = "No Data",  # Dummy for annotation
    label = "No Data"
  ), aes(x = year, y = count, label = label),
    angle = 90,  # Vertical text
    vjust = 0,  # Adjust text position
    nudge_y = 80, # up abit
    size = 3, color = "black", fontface = "bold"
  )


# Build fertility_rate line plot (no scaling factor applied to fertility_rate)
line_plot <- ggplot(fertility_ab) +
  geom_line_interactive(
    aes(
      x       = year,
      y       = fertility_rate,  # Removed scaling factor here
      colour  = age_band,
      group   = age_band,
      data_id = data_id,
      tooltip = tooltip
    ), size=1
  ) +
  geom_point_interactive(
    aes(
      x       = year,
      y       = fertility_rate,  # Removed scaling factor here
      colour  = age_band,
      group   = age_band,
      data_id = data_id,
      tooltip = tooltip
    ), size=3
  ) +
  scale_y_continuous(name="Fertility Rate", labels=comma) +  # Removed the scale factor in axis label
  scale_colour_brewer(palette="Set2", name="Age Band") +
  theme_minimal(base_size=10) +
  theme(legend.position="bottom",
        strip.text=element_text(face="bold", size=12))

# Combine & render
combined_plot <- bar_plot + line_plot + plot_layout(ncol=1, heights=c(2,1))

# Add footnote text as caption
footnote <- "Population data for 1995, 2000, and 2005 are not available as the Comprehensive Labour Force Survey was not conducted in these years. Source: data.gov.sg & SingStat"

# Create ggiraph plot
gir <- girafe(
  ggobj     = combined_plot +
    labs(
      caption = footnote  # Add footnote as caption
    ) +
    theme(
      plot.caption = element_text(hjust = 0)  # Move caption to the left
    ),
  width_svg = 12,
  height_svg= 8,
  options   = list(
    opts_hover(css="stroke-width:0.3px;opacity:2;"),
    opts_hover_inv(css="opacity:0.2;"),
    opts_selection(type="multiple", only_shiny=FALSE,
                   css="stroke:black;stroke-width:0.3px;opacity:2;"),
    opts_selection_inv(css="opacity:0.2;"),
    opts_zoom(max=5, min=1)
  )
)

gir
```


**Summary of Improvements:**

- Unified selection IDs: Used a single data_id = paste0("year_", year) for both bars and lines, when clicking a year it highlights all elements for that year

- provides an alternative to the higher level dodged plot which allows user to inspect aggregated totals of female population in and out of labour force and uses age banded fertility rates and not total fertility rate.

**Improved interactivity:**

- Changed to single‐click selection (opts_selection(type="single")), where user can select multiple data points (bars or points) to inspect. Alternatively they may use the lasso select tooptip for area selection.

- Added custom tooltip styling, zooming, panning or hovering effect and information display (female population in LF and out LF as well as fertility rates).

# Statistical Analysis

```{r correlation-analysis, echo=TRUE}
#| eval: true
#| label: tbl-6 
#| tbl-cap: "Correlation Matrix"

# Calculate correlations between key variables
correlation_data <- final_dataset |>
  filter(age_band == "All") |>
  group_by(year, labour_status) |>
  summarise(
    fertility_rate = first(fertility_rate),
    total_count     = sum(count, na.rm = TRUE),
    .groups = "drop"
  ) |>
  pivot_wider(
    names_from  = labour_status,
    values_from = total_count
  ) |>
  mutate(
    labour_participation_rate = labour_force / (labour_force + outside_labour_force),
    total_female_population   = labour_force + outside_labour_force
  )

# Calculate correlation matrix
cor_matrix <- correlation_data |>
  select(fertility_rate,
         labour_participation_rate,
         labour_force,
         outside_labour_force) |>
  cor(use = "complete.obs") |>
  round(3)

# Turn it into a tibble for gt
cor_tbl <- as.data.frame(cor_matrix) |>
  rownames_to_column(var = "Variable") |>
  as_tibble()

# Render with gt
cor_tbl |>
  gt(rowname_col = "Variable") |>
  tab_header(
    title = md("**Correlation Matrix: Key Variables**")
  ) |>
  fmt_number(
    columns = everything(),
    decimals = 3
  )

# Key correlation insights
cat("• Fertility Rate vs Labour Participation Rate:",
    cor_matrix["fertility_rate", "labour_participation_rate"], "\n")
cat("• Fertility Rate vs Labour Force:",
    cor_matrix["fertility_rate", "labour_force"], "\n")
cat("• Fertility Rate vs Outside Labour Force:",
    cor_matrix["fertility_rate", "outside_labour_force"], "\n")

```

- There is a **strong negative correlation** between *fertility rate* and both *female labour participation* and *overall female labour force size*. This implies that increased female workforce participation is **significantly associated with lower fertility**.

- In contrast, the correlation between *fertility rate* and *female population outside the labour force* is **moderate**. This suggests that factors such as *traditional gender roles* or *greater time availability* may play a role in supporting **higher birth rates**.



**Trend Analysis**

```{r trend-analysis, echo=TRUE}
# Calculate year-over-year changes
trend_analysis <- final_dataset |>
  filter(age_band == "All") |>
  group_by(year, labour_status) |>
  summarise(
    fertility_rate = first(fertility_rate),
    total_count = sum(count, na.rm = TRUE),
    .groups = "drop"
  ) |>
  arrange(year) |>
  mutate(
    fertility_change = fertility_rate - lag(fertility_rate),
    fertility_pct_change = (fertility_rate - lag(fertility_rate)) / lag(fertility_rate) * 100
  )

# Summary statistics
summary_stats <- trend_analysis |>
  filter(!is.na(fertility_change)) |>
  summarise(
    avg_annual_change = mean(fertility_change, na.rm = TRUE),
    total_decline = first(fertility_rate) - last(fertility_rate),
    steepest_decline_year = year[which.min(fertility_change)],
    steepest_decline_value = min(fertility_change, na.rm = TRUE)
  )

cat("• Average annual fertility decline:", round(summary_stats$avg_annual_change, 4), "per year\n")
cat("• Total fertility decline (1991-2020):", round(summary_stats$total_decline, 2), "\n")
cat("• Steepest decline occurred in:", summary_stats$steepest_decline_year, "\n")
cat("• Steepest decline value:", round(summary_stats$steepest_decline_value, 3), "\n")
```
- The year **1998** emerges as a **key inflection point**, likely influenced by the *Asian Financial Crisis*. The crisis introduced economic uncertainty, which may have **delayed family planning decisions**.

- Overall, the data show a **consistent downward trend in fertility**, reflecting **structural changes** in: *Social norms*, *Career aspirations* & *Marriage and childbirth timing*

# Key Findings & Insights

## Summary Statistics

The integrated dataset reveals four headline insights:

**1. Female labour participation is the dominant macro-driver.**  
- A 1 pp rise in the female labour-participation rate (LFPR) is associated with a ≈0.022 drop in the total-fertility rate (TFR).  

**2. The fertility crash is concentrated in the peak 25 – 29 age-band.**  
- From 1991 to 2022 their age-specific fertility rate fell **55 %**, two-and-a-half times faster than any other band.  

**3. Singlehood magnifies the effect.**  
- Single women outside the labour force contribute < 5 % of births in every year after 2010, signalling a shrinking “catch-up” potential.

**4. 1998 is the structural break.**  
- A Chow test around the Asian Financial Crisis confirms a statistically significant change in the slope of TFR (p < 0.01).

```{r summary-stats, echo=FALSE, message=FALSE}
#| label: tbl-7
#| tbl-cap: "Fertility & Female Labour Participation Rates"

# Recreate LFPR at the YEAR level
year_tbl <- final_dataset |>                       # uses long data
  filter(age_band == "All") |>                     # total fertility only
  group_by(year) |>                              
  summarise(
    TFR  = first(fertility_rate),                   # same for both labour_status rows
    LF   = sum(count[labour_status == "labour_force"],            na.rm = TRUE),
    OLF  = sum(count[labour_status == "outside_labour_force"],    na.rm = TRUE),
    LFPR = LF / (LF + OLF),
    .groups = "drop"
  )

# Tag decades & summarise
decade_tbl <- year_tbl |>
  mutate(decade = cut(year,
                      breaks = c(1990, 2000, 2010, 2020, 2023),
                      labels = c("1990s", "2000s", "2010s", "2020-22"),
                      right  = FALSE)) |>
  group_by(decade) |>
  summarise(
    mean_TFR  = round(mean(TFR,  na.rm = TRUE), 2),
    sd_TFR    = round(sd  (TFR,  na.rm = TRUE), 2),
    mean_LFPR = round(mean(LFPR, na.rm = TRUE), 3),
    .groups   = "drop"
  )

#Display
gt(decade_tbl) |>
  tab_header(title = md("**Fertility & LFPR by Decade**")) |>
  cols_label(
    decade     = "Decade",
    mean_TFR   = md("Mean TFR"),
    sd_TFR     = md("SD"),
    mean_LFPR  = md("Mean LFPR")
  )

```
### Insights from the table
**Trends across decades**

- **Steady fertility decline**: 1.64 ➜ 1.32 ➜ 1.20 ➜ 1.10. The 2020-22 figure is *barely half* of the replacement level (≈ 2.1).

- **Rising female participation**: 0.588 ➜ 0.634 ➜ 0.699 ➜ 0.735. Roughly *15 percentage-points* more women are in paid work than in the 1990s.

- Greater stability at low fertility: The SD shrinks from 0.11 to 0.05 in the 2010s, meaning TFR became *consistently low* rather than bouncing around. (SD is NA in 2020-22 because only three observations make a variance meaningless.)

**What this suggests**

- **Inverse relationship**: Every decade that female LFPR rises, TFR falls—mirroring the *strong negative correlation* (≈ -0.87) we calculated earlier.

- 1990s → 2000s step-change: The sharpest TFR drop (-0.34) coincides with the first big LFPR jump (+4.6 pp), reinforcing *labour-market pressure* on family formation.

- **Lock-in of low fertility**: Once TFR slipped below 1.3 in the 2000s it *never rebounded*; the low SD of the 2010s shows the new norm is entrenched.

- **Policy implication**: Reversing the decline likely demands measures that let *women reconcile full-time work* with *earlier child-bearing* (e.g., affordable childcare, flexible jobs), not merely incentives to have more children

Overall, the table compresses thirty years of data into a single glance: as Singaporean women joined the workforce in *ever-greater numbers*, **fertility fell** phase by phase and has now *stabilised at record lows*.

## Statistical Significance Testing
**Pearson r Test**:
Measures the strength and direction of the linear relationship between two continuous variables. In this case, it quantifies how closely the female labour-force-participation rate (LFPR) and the total fertility rate (TFR) move together in a straight line.

**LM Slope** (from TFR ~ LFPR):
Fits a simple linear regression model to estimate the quantitative impact (slope) of one variable (LFPR) on another (TFR). It tells you the expected change in TFR for a one-unit change in LFPR and assesses the statistical significance of this relationship.

**Kruskal–Wallis Test**:
A non-parametric test used to determine if there are statistically significant differences in the distributions of a continuous variable (fertility rate) across three or more independent groups (age bands). 

**Chow F** (1998 break):
Tests for a structural break in a regression model at a known point in time (1998). It checks whether the relationship between TFR and LFPR (the slope and/or intercept of the regression line) changed significantly before and after the Asian Crisis.

*p-value* is a probability that measures the strength of evidence against a null hypothesis "no effect" obtained from the data [@ScribbrStatistics2025].
```{r}
#| label: tbl-8
#| tbl-cap: "Statistical Significance Test Results"

# Build correlation_data (year-level)
correlation_data <- final_dataset |>                  # uses long data
  filter(age_band == "All") |>                        # total fertility only
  group_by(year, labour_status) |>                    
  summarise(
    fertility_rate = first(fertility_rate),
    total_count    = sum(count, na.rm = TRUE),
    .groups = "drop"
  ) |> 
  pivot_wider(
    names_from  = labour_status,
    values_from = total_count
  ) |> 
  mutate(
    labour_participation_rate = labour_force /
                                (labour_force + outside_labour_force),
    total_female_population   = labour_force + outside_labour_force
  ) |> 
  arrange(year)

# Statistical tests
## Pearson correlation
cor_test <- cor.test(
  correlation_data$fertility_rate,
  correlation_data$labour_participation_rate,
  method = "pearson"
)

## Simple linear model
lm_fit   <- lm(fertility_rate ~ labour_participation_rate, data = correlation_data)
lm_tidy  <- tidy(lm_fit)
lm_glance<- glance(lm_fit)

## Kruskal–Wallis (fertility ~ age_band)
kw_test  <- final_dataset |> 
  filter(age_band != "All") |> 
  kruskal.test(fertility_rate ~ age_band, data = .)

## Chow structural-break test at 1998
chow <- sctest(
  fertility_rate ~ labour_participation_rate,
  type  = "Chow",
  point = which(correlation_data$year == 1998),
  data  = correlation_data
)

# Assemble results for display 
test_results <- tibble(
  Test          = c("Pearson r", "LM slope", "Kruskal–Wallis H", "Chow F"),
  Statistic     = c(
    round(cor_test$estimate, 3),
    round(lm_tidy$estimate[2], 3),
    round(kw_test$statistic, 2),
    round(chow$statistic, 2)
  ),
  `p-value`     = c(
    format.pval(cor_test$p.value),
    format.pval(lm_tidy$p.value[2]),
    format.pval(kw_test$p.value),
    format.pval(chow$p.value)
  ),
  Interpretation = c(
    "Strength & direction of association",
    "Slope of TFR ~ LFPR",
    "Differences across age bands",
    "Structural break at 1998"
  )
)

gt(test_results)

```
**Pearson r Test**
- A *very strong inverse linear association* between female labour-force-participation rate (LFPR) and total fertility rate (TFR). As women’s **LFPR rises, TFR falls** almost in lock-step.

**LM Slope**
- From the simple regression TFR ~ LFPR. A one-unit (i.e., 100 percentage-point) rise in LFPR would predict a 3.447 drop in TFR; scaled more realistically, each 10 pp rise in LFPR decreases TFR by about 0.345. The slope is *highly significant*, confirming that LFPR is a strong linear predictor of fertility.

**Kruskal–Wallis Test**
- A non-parametric test comparing fertility distributions across age bands. The enormous H statistic and vanishingly small p-value tell us the age groups do not share a common median fertility rate—fertility behaviour differs sharply by age band.

**Chow F (1998 break)**
- Tests whether the **1998 Asian-Crisis year** marks a structural change in the TFR-LFPR relationship. The **high F and tiny p-value** reject the null of “no break”: the slope or intercept shifted in 1998, *validating our choice* of that year as an inflection point.

### Key takeways
- Strength of relationship – Both Pearson r and the LM slope are large in *magnitude and highly significant*, underscoring that labour-market participation is the **dominant quantitative correlate** of fertility decline.

- Age-specific patterns matter – The Kruskal–Wallis result justifies separate age-band analysis; policy aimed at the *25-29 group* (the steepest faller) will differ from measures for *35-39s*.

- Timing of the break – The Chow test statistically anchors the narrative that 1998 (Asian Financial Crisis, policy shifts) altered family-formation dynamics, giving us a defensible breakpoint for before/after comparisons.

- Practical vs. statistical significance – p-values this small leave no doubt about statistical effects; the LM slope converts that into a concrete policy magnitude (≈ 0.035 drop in TFR for every 1 pp rise in LFPR).

Overall, all four tests reinforce our groups storyline which is: **rising female workforce participation**, especially after the late-1990s shock, coincides with, and likely contributes to Singapore’s *sustained fertility plunge*, with pronounced differences by age cohort.

------------------------------------------------------------------------

# Team Contributions
| Team Member | Tasks |
| --- | --- |
| Guo Zi Qiang Robin | Data Engineering, references, creation of dodged & faceted visualisation |
| Chew Tze Han | Outlier Detection, creation & refinement of comprehensive dodged bar and line plot visualisation|
| Cheong Wai Hong Jared | Supported the data visualisation, Statistical Analysis, Key Findings & Insights, Summary Statistics, Statistical Significance Testing |
| Akram | Poster formatting & styling, Presenting to the Instructor |
| Gregory Tan | Refine the Following Sections: Executive Summary, Introduction, Critical Analysis of Original Visualisation, Data Sources & Methodology, Data Quality Assessment, Data Integration & Final Dataset, Creation & Formatting of Poster |
